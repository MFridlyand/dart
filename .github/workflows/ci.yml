name: CI

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"
  schedule:
    # Cron sytax: [minute hour day_of_the_month month day_of_the_week]
    - cron: "0 2 * * 0,3" # Run every Sunday and Wednesday at 02:00

env:
  # Hosted on: https://hub.docker.com/repository/docker/dartsim/dart-dev
  DART_DEV_IMAGE: dartsim/dart-dev
  UBUNTU_BUILD_CMD: |
    docker run \
      --platform $PLATFORM \
      -v $GITHUB_WORKSPACE:$GITHUB_WORKSPACE \
      --env-file ./.ci/docker/env.list \
      $DART_DEV_IMAGE:$DOCKER_TAG \
      /bin/sh -c "cd $GITHUB_WORKSPACE && ./.ci/build.sh"

jobs:
  ubuntu:
    name: Ubuntu
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        distro: [bionic, focal, hirsute]
        platform: [linux/amd64]
        compiler: [gcc]
        build_type: [Debug, Release]
        include:
          - distro: focal
            platform: linux/amd64
            compiler: clang
            build_type: Release
          - distro: focal
            platform: linux/arm64
            compiler: gcc
            build_type: Release
          - distro: focal
            platform: linux/ppc64le
            compiler: gcc
            build_type: Release
          - distro: focal
            platform: linux/s390x
            compiler: gcc
            build_type: Release
    env:
      PLATFORM: ${{ matrix.platform }}
      DOCKER_TAG: ubuntu-${{ matrix.distro }}-v8.0
      COMPILER: ${{ matrix.compiler }}
      BUILD_TYPE: ${{ matrix.build_type }}
      CHECK_FORMAT: ON
      DART_BUILD_PYTHON_BINDING: ON
    steps:
      # https://github.com/marketplace/actions/docker-setup-qemu
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Pull dev container
        run: docker pull ${{ env.DART_DEV_IMAGE }}:${{ env.DOCKER_TAG }}
      - name: Build
        run: ${{ env.UBUNTU_BUILD_CMD }}

  catalina_clang_release:
    name: macOS 10.15 [Clang]
    runs-on: macos-10.15
    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug, Release]
    env:
      COMPILER: clang
      BUILD_TYPE: ${{ matrix.build_type }}
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: ./.ci/install_deps_osx.sh
      - name: Build
        run: sudo -E ./.ci/build.sh

  windows_2019_msvc:
    name: Windows [MSVC|Release]
    runs-on: windows-2019
    env:
      BUILD_TYPE: Release
      VCPKG_ROOT: "C:/dartsim/vcpkg"
      VCPKG_BUILD_TAG: v0.2.0-70f192e
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        shell: cmd
        run: |
          mkdir -p C:\dartsim
          choco install -y wget
          wget -q https://github.com/dartsim/vcpkg-build/releases/download/%VCPKG_BUILD_TAG%/vcpkg-dartsim-dependencies.zip
          unzip -qq vcpkg-dartsim-dependencies.zip -d C:\dartsim
      - name: Build
        shell: cmd
        run: |
          mkdir build
          cd build
          cmake .. -G "Visual Studio 16 2019" -A x64 -Wno-dev ^
            -DCMAKE_BUILD_TYPE=%BUILD_TYPE% ^
            -DCMAKE_TOOLCHAIN_FILE="%VCPKG_ROOT%/scripts/buildsystems/vcpkg.cmake"
          cmake --build . --target ALL_BUILD --parallel
