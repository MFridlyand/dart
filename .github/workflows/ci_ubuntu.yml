name: CI Ubuntu

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"
  schedule:
    # Cron sytax: [minute hour day_of_the_month month day_of_the_week]
    - cron: "0 2 * * 0,3" # Run every Sunday and Wednesday at 02:00

env:
  # Hosted on: https://hub.docker.com/repository/docker/dartsim/dart-dev
  DART_DEV_IMAGE: dartsim/dart-dev
  UBUNTU_BUILD_CMD: |
    if [ "$ENABLE_CODECOV" = "ON" ]; then
      ci_env=`bash <(curl -s https://codecov.io/env)`
    fi
    docker run \
      $ci_env -e CI=true \
      --platform $PLATFORM \
      -v $GITHUB_WORKSPACE:$GITHUB_WORKSPACE \
      --env-file ./.ci/docker/env.list \
      $DART_DEV_IMAGE:$DOCKER_TAG \
      /bin/sh -c "cd $GITHUB_WORKSPACE && ./.ci/build.sh"

jobs:
  ubuntu:
    name: Ubuntu
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        distro: [bionic, focal, hirsute]
        platform: [linux/amd64]
        compiler: [gcc]
        build_type: [Debug, Release]
        include:
          - distro: focal
            platform: linux/amd64
            compiler: clang
            build_type: Release
          - distro: focal
            platform: linux/arm64
            compiler: gcc
            build_type: Release
          - distro: focal
            platform: linux/ppc64le
            compiler: gcc
            build_type: Release
          - distro: focal
            platform: linux/s390x
            compiler: gcc
            build_type: Release
    env:
      PLATFORM: ${{ matrix.platform }}
      DOCKER_TAG: ubuntu-${{ matrix.distro }}-v8.0
      COMPILER: ${{ matrix.compiler }}
      BUILD_TYPE: ${{ matrix.build_type }}
      BUILD_TESTS: "${{ matrix.distro == 'bionic' && 'OFF' || 'ON' }}"
      BUILD_BENCHMARKS: "${{ (matrix.distro == 'focal' && matrix.platform == 'linux/amd64' && matrix.build_type == 'Release') && 'ON' || 'OFF' }}"
      CHECK_FORMAT: "${{ matrix.distro == 'focal' && 'ON' || 'OFF' }}"
      ENABLE_CODECOV: "${{ matrix.distro == 'focal' && matrix.build_type == 'Debug' && 'ON' || 'OFF' }}"
      BUILD_PYTHON_BINDING: "${{ matrix.compiler == 'gcc' && 'ON' || 'OFF' }}"
    steps:
      # https://github.com/marketplace/actions/docker-setup-qemu
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Pull dev container
        run: docker pull ${{ env.DART_DEV_IMAGE }}:${{ env.DOCKER_TAG }}
      - name: Build
        run: ${{ env.UBUNTU_BUILD_CMD }}
